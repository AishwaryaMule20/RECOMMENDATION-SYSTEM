# Step 1: Fix compatibility issues
!pip install numpy==1.23.5
!pip install scikit-surprise --no-binary :all:

# Step 2: Import required libraries
from surprise import SVD, Dataset, Reader
from surprise.model_selection import train_test_split
from surprise import accuracy
from collections import defaultdict

# Step 3: Load the built-in MovieLens 100k dataset
data = Dataset.load_builtin('ml-100k')

# Step 4: Split into training and testing sets
trainset, testset = train_test_split(data, test_size=0.2, random_state=42)

# Step 5: Train the SVD model
model = SVD()
model.fit(trainset)

# Step 6: Make predictions
predictions = model.test(testset)

# Step 7: Evaluate performance
print("\nModel Evaluation:")
print("Root Mean Squared Error (RMSE):", accuracy.rmse(predictions))
print("Mean Absolute Error (MAE):", accuracy.mae(predictions))

# Step 8: Generate top-5 recommendations for each user
def get_top_n(predictions, n=5):
    top_n = defaultdict(list)
    for uid, iid, true_r, est, _ in predictions:
        top_n[uid].append((iid, est))
    for uid, user_ratings in top_n.items():
        user_ratings.sort(key=lambda x: x[1], reverse=True)
        top_n[uid] = user_ratings[:n]
    return top_n

top_n = get_top_n(predictions, n=5)

# Step 9: Show recommendations for a sample user
sample_user = list(top_n.keys())[0]
print(f"\nTop 5 recommendations for user {sample_user}:")
for movie_id, rating in top_n[sample_user]:
    print(f"Movie ID: {movie_id}, Estimated Rating: {rating:.2f}")
